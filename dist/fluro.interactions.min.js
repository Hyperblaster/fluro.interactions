angular.module("fluro.interactions",["fluro.util","fluro.content"]),angular.module("fluro.interactions").service("FluroValidate",function(){var controller={};return controller.validate=function(entry,field){if(field.minimum>0&&!entry)return!1;if(_.isArray(entry)){var array=entry;if(1==field.minimum&&1==field.maximum&&"array"!=field.type)return!1;if(array.length<field.minimum)return!1;if(field.maximum&&array.length>field.maximum)return!1;var invalidEntries=_.filter(array,function(obj){var allowed=!0;field.allowedValues&&field.allowedValues.length&&(allowed=_.contains(field.allowedValues,obj));var correctType=controller.validateType(obj,field.type);return allowed&&correctType?!1:!0});if(invalidEntries.length)return!1}else{if(field.minimum>1)return!1;if(field.minimum>0){var correctType=controller.validateType(entry,field.type);if(!correctType)return!1}if(field.allowedValues&&field.allowedValues.length){var allowed=_.contains(field.allowedValues,entry);if(!allowed)return!1}}return!0},controller.validateType=function(field,fieldType){switch(fieldType.toLowerCase()){case"reference":return validator.isMongoId(_.isString(field)?field:field._id);case"email":return validator.isEmail(field);case"url":return validator.isURL(field);case"array":return _.isArray(field);case"number":return validator.isNumeric(field);case"integer":return validator.isInt(field);case"float":return validator.isFloat(field);case"string":return _.isString(field);case"object":return _.isObject(field);case"date":return _.isDate(field);case"boolean":return _.isBoolean(field)}},controller}),angular.module("fluro.interactions").service("FluroInteraction",function(Fluro,FluroContent){var controller={};return controller.interact=function(title,key,interactionData){var submission={};return submission.title=title,submission.key=key,submission.contact=interactionData._contact?interactionData._contact:{},interactionData._firstName&&(submission.contact.firstName=interactionData._firstName),interactionData._lastName&&(submission.contact.lastName=interactionData._lastName),interactionData._email&&(submission.contact.emails=[interactionData._email]),interactionData._emails&&(submission.contact.emails=interactionData._emails),interactionData._phoneNumber&&(submission.contact.phoneNumbers=[interactionData._phoneNumber]),interactionData._phoneNumbers&&(submission.contact.phoneNumbers=interactionData._phoneNumbers),interactionData._dob&&(submission.contact.dob=interactionData._dob),interactionData._gender&&(submission.contact.gender=interactionData._gender),submission.interaction=interactionData,FluroContent.endpoint("interact/"+key).save(submission).$promise},controller});